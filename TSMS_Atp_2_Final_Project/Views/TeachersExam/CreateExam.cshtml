@model TSMS_Atp_2_Final_Project.Models.Com.Tsms.Exam

@{
    Layout = "~/Views/Shared/_ExamLayout.cshtml";
}
@section Style{
    <title>CreateExam</title>
}
@section Html{
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Exam</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Course, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Course, new { htmlAttributes = new { @id = "Course", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Course, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Type, new List<SelectListItem>
               {
                   new SelectListItem{Text="Quiz", Value="Quiz", Selected=true},
                   new SelectListItem{Text="Mid-Term", Value="Mid-Term" },
                   new SelectListItem{Text="Final-Term", Value="Final-Term" }
               }, "Select Exam Type", new { htmlAttributes = new { @class = "form-control" } })


                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @id = "date", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new {@id="StartTime", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.FinishTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FinishTime, new { htmlAttributes = new { @id = "FinishTime", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FinishTime, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.MarkPerQues, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MarkPerQues, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MarkPerQues, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.ExamState, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ExamState, new List<SelectListItem>
               {
                   new SelectListItem{Text="Close", Value="Close", Selected=true},
                   new SelectListItem{Text="Open", Value="Open" },
               }, "Select Exam Type", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExamState, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}

@section Script
{
    <script type="text/javascript">
      $(function ()
      {
          $('#Course').autocomplete({
              source: '@Url.Action("GetCourses")'
          });
          $('#date').datepicker({
              dateFormat: 'yy/mm/dd'
          });
          $('#StartTime').timepicker();
          $('#FinishTime').timepicker();
      });
    </script>
}